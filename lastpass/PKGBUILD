# Maintainer: Det <nimetonmaili at gmail a-dot com>

pkgname=lastpass
pkgver=3.0.0
_chromver=3.0.5-1  # The actual extensions' versions
_ffver=3.0.1-1
_opver=3.0.5-1
pkgrel=3
pkgdesc="The Universal LastPass installer for Firefox, Chrome, and Opera"
arch=('any')
url="https://lastpass.com"
license=('custom')
makedepends=('unzip')
optdepends=('chromium: for Chromium'
            'chromium-dev: for Chromium (Dev Channel) (AUR)'
            'firefox: for Mozilla Firefox'
            'firefox-beta-bin: for Mozilla Firefox (Beta) (AUR)'
            'firefox-nightly: for Mozilla Firefox (Nightly) (AUR)'
            'google-chrome: for Google Chrome (AUR)'
            'google-chrome-beta: for Google Chrome (Beta Channel) (AUR)'
            'google-chrome-dev: for Google Chrome (Dev Channel) (AUR)'
            'opera: for Opera'
            'opera-next: for Opera Next (AUR)')
conflicts=('lastpass-plugin-opera' 'lastpass-universal')
install=$pkgname.install
#source=("$url/lplinux.tar.bz2") # Let's do this a bit more efficiently for now
source=(# Chrome
        "lpchrome_linux_$_chromver.crx::$url/lpchrome_linux.crx"
        # Firefox
        "lp_linux_$_ffver.xpi::$url/lp_linux.xpi"
        'profiles.ini'
        # Opera
        "lastpass-$_opver.oex::$url/lpopera.oex"
        'prefs.dat'
        'widgets.dat')
noextract=("lp_linux_$_ffver.xpi" "lastpass-$_opver.oex")
md5sums=('1de4d69891eb01e97a4b40bc2ae10a99'
         'd0dc9fb4aedf2ca2eb07d2c5725c4bee'
         '2d3eab6ed651ddff4e8ff408f7f064ec'
         '71ef1e90f93e65314a72bf040e5df7df'
         'c373651995c0f8ef332439f2ed3b0670'
         '1a6927e679ac378ea0583662d41f6c46')

prepare() {
    # Since we're installing to $HOME in .install, we need checks such as this to
    # see whether some clever guy is building with --asroot
    if [ $USER = root ]; then
        msg2 "NOTE: Makepkg is running as root. Most files will be installed to /root."
        read -p "$(tput bold)$(tput setaf 4)  ->$(tput sgr0)$(tput bold) Continue? (Y/n) $(tput sgr0)"
        [[ $REPLY != [yY] ]] && error "Aborted by user! Exiting..." && echo && exit 1
    fi

    # Write the extension versions and the $USER to the .install
    sed -e "s/_ffver= *[^ ]*/_ffver=$_ffver/" \
        -e "s/_opver= *[^ ]*/_opver=$_opver/" \
        -e "s/_user= *[^ ]*/_user=$USER/" \
        -i ../$pkgname.install
}

_chrome_package() {
    # This returns a warning about the extra bytes so redirect to /dev/null instead and use the || operator
    unzip -o lpchrome_linux_$_chromver.crx -d chrome &>/dev/null || true

    # Install to a single place and just link it for everybody else
    CRX=/usr/share/lastpass/lpchrome.crx
    echo "{ \"external_crx\": \"$CRX\", \"external_version\": \"${_chromver/-*}\" }" > hdokiejnpimakedhajhdlcegeplioahd.json
    for i in opt/google/chrome usr/share/chromium usr/share/chromium-dev; do
        install -Dm644 hdokiejnpimakedhajhdlcegeplioahd.json "$pkgdir"/$i/extensions/hdokiejnpimakedhajhdlcegeplioahd.json
    done
    install -Dm644 lpchrome_linux_$_chromver.crx "$pkgdir"/$CRX

    # Allow silent installation since Chrome 21: http://www.chromium.org/administrators/policy-list-3#ExtensionInstallSources
    echo "{ \"ExtensionInstallSources\": [\"$url/*\", \"https://*.lastpass.com/*\", \"https://*.cloudfront.net/lastpass/*\"] }" > lastpass_policy.json
    for i in opt/chrome chromium chromium-dev; do
        install -Dm644 lastpass_policy.json "$pkgdir"/etc/$i/policies/managed/lastpass_policy.json
    done
}

_firefox_package() {
    # The extension and the profiles.ini go to $HOME so do this in the .install
    for i in lp_linux_$_ffver.xpi profiles.ini; do
        install -Dm644 $i "$pkgdir"/usr/share/lastpass/$i
    done

    # The binary plugin
    [ "$CARCH" = 'x86_64' ] && _64=64
    for i in opera opera-next; do
        install -Dm644 chrome/libnplastpass$_64.so "$pkgdir"/usr/lib/mozilla/plugins/libnplastpass$_64.so
    done
}

_opera_package() {
    # Same for Operas and their settings
    install -m644 lastpass-$_opver.oex {pref,widget}s.dat "$pkgdir"/usr/share/lastpass/

    # The binary plugin
    [ "$CARCH" = 'x86_64' ] && _64=64
    for i in opera opera-next; do
        install -Dm644 chrome/libnplastpass$_64.so "$pkgdir"/usr/lib/$i/plugins/libnplastpass$_64.so
    done
}

package() {
    msg2 "Installing for Google Chromes/Chromiums"
    _chrome_package

    msg2 "Installing for Mozilla Firefoxes"
    _firefox_package

    msg2 "Installing for Operas"
    _opera_package
}

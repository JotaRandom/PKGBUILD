## Set some variables

# Versions
_ffver=3.0.8-1    # For Firefox
_opver=3.0.7-1    # For Opera

# Directories
_user=bahamut           # The name of the user
_HOME=/home/$_user  # ..and his $HOME
_lpdir=/usr/share/lastpass/  # Main folder
_mozilla=$_HOME/.mozilla/firefox/$(sed -n 's/^Path=//p' $_HOME/.mozilla/firefox/profiles.ini)  # Firefox profile

## Install for Mozilla Firefoxes
_firefox() {
    echo -e "\nInstalling Mozilla Firefox leftovers..."

    if [ -f $_HOME/.mozilla/firefox/profiles.ini ]; then
        # Install
        install -d -o $_user $_mozilla/extensions/
        unzip -o $_lpdir/lp_linux_$_ffver.xpi -d $_mozilla/extensions/support@lastpass.com/ &>/dev/null

        # Enable auto-installation through extensions.autoDisableScopes
        echo "user_pref(\"extensions.autoDisableScopes\", 10);" >> $_mozilla/prefs.js

        # Set the correct ownerships
        chown $_user -R $_mozilla/extensions/support@lastpass.com/ 
    elif ls -d $_HOME/.mozilla/firefox/*/ &>/dev/null; then
        # If that fails, install for all profiles
        for i in $_HOME/.mozilla/firefox/*; do
            install -d -o $_user $i/extensions/
            unzip -o $_lpdir/lp_linux_$_ffver.xpi -d $i/extensions/support@lastpass.com/ &>/dev/null

            # Enable the auto-installation
            echo "user_pref(\"extensions.autoDisableScopes\", 10);" >> $i/prefs.js

            # Set the correct ownerships
            chown $_user -R $i/extensions/support@lastpass.com/
        done
    else
        # If no profiles whatsoever, create one
        install -d $_HOME/.mozilla/firefox/lastpass/extensions/
        unzip -o $_lpdir/lp_linux_$_ffver.xpi -d \
              $_HOME/.mozilla/firefox/lastpass/extensions/support@lastpass.com/ &>/dev/null

        # The profiles.ini
        install -m644 $_lpdir/profiles.ini $_HOME/.mozilla/firefox/

        # Enable the auto-installation
        echo "user_pref(\"extensions.autoDisableScopes\", 10);" >> \
              $_HOME/.mozilla/firefox/lastpass/prefs.js

        # Set the correct ownerships
        chown $_user -R $_HOME/.mozilla/
    fi
}

## Install for Operas
_opera() {
    echo -e "\nInstalling Opera leftovers...\n"

    for i in .opera .opera-next; do
        # If already installed, use the same name (otherwise our own will get removed)
        if ls $_HOME/$i/widgets/lastpass-*.oex &>/dev/null; then
            install -m644 -o $_user $_lpdir/lastpass-$_opver.oex $_HOME/$i/widgets/lastpass-*.oex
        else
            install -Dm644 -o $_user $_lpdir/lastpass-$_opver.oex $_HOME/$i/widgets/lastpass-$_opver.oex

            # Add the widgets.dat entry
            if [ -f $_HOME/$i/widgets/widgets.dat ]; then
                # Append to the current one (compact the sed line)
                _1st="<section id=\"lastpass\">\n"
                _2nd="<value id=\"path to widget data\" xml:space=\"preserve\">"
                _3rd="{Preferences}widgets/lastpass-$_opver.oex</value>\n  </section>"
                sed -i "/<\/preferences>/i\  $_1st    $_2nd$_3rd" $_HOME/$i/widgets/widgets.dat
            else
                # If no widgets.dat, update the extension info and install it
                sed -i "s/lastpass-opver.oex/lastpass-$_opver.oex/g" $_lpdir/widgets.dat
                install -m644 -o $_user $_lpdir/widgets.dat $_HOME/$i/widgets/
            fi

            # Install the preferences (required for auto-enabling this thing)
            install -Dm644 -o $_user $_lpdir/prefs.dat $_HOME/$i/widgets/lastpass/prefs.dat

            # Set the correct ownership for the directories
            chown $_user $_HOME/$i/ $_HOME/$i/widgets/ $_HOME/$i/widgets/lastpass/
        fi
    done
}

post_install() {
    _firefox
    _opera

    # Create the settings dir
    install -d $_HOME/.lastpass/
}

post_upgrade() {
    _firefox
    _opera
}

post_remove() {
    ## Google Chromes/Chromiums
    echo -e "\nRemoving from Google Chromes/Chromiums..."
    for i in google-chrome chromium chromium-dev; do
        rm -rf $_HOME/.config/$i/Default/Extensions/hdokiejnpimakedhajhdlcegeplioahd/
    done

    ## Mozilla Firefoxes
    echo -e "\nRemoving from Mozilla Firefoxes..."
    for i in $_HOME/.mozilla/firefox/*; do
        rm -rf $i/extensions/support@lastpass.com/
    done

    # Get rid of anything we might have created
    # 1) Omit our own stuff with bash's extglob ("!(argument1|argument2)") (turned on by default)
    # 2) Use the wc -l/-gt 0 combination, in case the folder isn't there (which would also make it pass the test)
    # 3) Use asterisk on "lastpass" for the deprecated "-universal" naming
    if [ $(ls -d ~/.mozilla/firefox/lastpass*/!(extensions|prefs.js) 2>&- | wc -l) -gt 0 ]; then
        # Remove the profile folder
        rm -r $_HOME/.mozilla/firefox/lastpass*/

        # If ~/.mozilla/firefox or the whole thing was created by us, get rid of them too
        for j in firefox ""; do
            if [[ ! $(ls -d $_HOME/.mozilla/$j/!(profiles.ini)) ]]; then
                rm -r $_HOME/.mozilla/$j/
            fi
        done
    fi

    ## Operas
    echo -e "\nRemoving from Operas...\n"
    for i in .opera .opera-next; do
        rm -rf $_HOME/$i/widgets/lastpass-*

        # widgets.dat won't be cleaned automatically by Opera startup
        if grep wuid- $_HOME/$i/widgets/widgets.dat &>/dev/null; then
            sed -i "/lastpass/,/section/d" $_HOME/$i/widgets/widgets.dat
        else
            rm $_HOME/$i/widgets/widgets.dat
        fi

        # If ~/.opera(-next)/widgets or the whole thing was created by us, get rid of them too
        for j in widgets ""; do
            if ! ls $_HOME/$i/$j/ &>/dev/null; then
                rm -r $_HOME/$i/$j/
            fi
        done
    done

    ## Remove the settings dir
    rm -rf $_HOME/.lastpass/
}
From: Mike Hommey <mh@glandium.org>
Date: Sat, 16 Nov 2013 13:01:17 +0900
Subject: Fixup "Reset Firefox" after bad merge

---
 toolkit/content/resetProfile.js  | 52 ----------------------------------------
 toolkit/modules/ResetProfile.jsm | 11 +++++----
 2 files changed, 6 insertions(+), 57 deletions(-)

diff --git a/toolkit/content/resetProfile.js b/toolkit/content/resetProfile.js
index 2253994..d46b43b 100644
--- a/toolkit/content/resetProfile.js
+++ b/toolkit/content/resetProfile.js
@@ -28,58 +28,6 @@ function onResetProfileLoad() {
   populateResetPane("migratedItems");
 }
 
-<<<<<<< HEAD
-=======
-/**
- * Check if reset is supported for the currently running profile.
- *
- * @return boolean whether reset is supported.
- */
-function resetSupported() {
-  let profileService = Cc["@mozilla.org/toolkit/profile-service;1"].
-                       getService(Ci.nsIToolkitProfileService);
-  let currentProfileDir = Services.dirsvc.get("ProfD", Ci.nsIFile);
-
-  // Reset is only supported for the default profile if the self-migrator used for reset exists.
-  try {
-    if (currentProfileDir.equals(profileService.selectedProfile.rootDir) &&
-        "@mozilla.org/toolkit/profile-migrator;1" in Cc) {
-      let pm = Cc["@mozilla.org/toolkit/profile-migrator;1"].createInstance(Ci.nsIProfileMigrator);
-      return ("canMigrate" in pm) && pm.canMigrate("self");
-    }
-  } catch (e) {
-    // Catch exception when there is no selected profile.
-    Cu.reportError(e);
-  }
-  return false;
-}
-
-function getMigratedData() {
-  Components.utils.import("resource:///modules/MigrationUtils.jsm");
-
-  // From migration.properties
-  const MIGRATED_TYPES = [
-    4,  // History and Bookmarks
-    16, // Passwords
-    8,  // Form History
-    2,  // Cookies
-  ];
-
-  // Loop over possible data to migrate to give the user a list of what will be preserved.
-  let dataTypes = [];
-  for (let itemID of MIGRATED_TYPES) {
-    try {
-      let typeName = MigrationUtils.getLocalizedString(itemID + "_self");
-      dataTypes.push(typeName);
-    } catch (x) {
-      // Catch exceptions when the string for a data type doesn't exist.
-      Components.utils.reportError(x);
-    }
-  }
-  return dataTypes;
-}
-
->>>>>>> Bug 756390 - Make the "Reset Firefox" feature more generic
 function onResetProfileAccepted() {
   let retVals = window.arguments[0];
   retVals.reset = true;
diff --git a/toolkit/modules/ResetProfile.jsm b/toolkit/modules/ResetProfile.jsm
index db57f2a..d618d08 100644
--- a/toolkit/modules/ResetProfile.jsm
+++ b/toolkit/modules/ResetProfile.jsm
@@ -7,8 +7,6 @@
 this.EXPORTED_SYMBOLS = ["ResetProfile"];
 
 const {classes: Cc, interfaces: Ci, utils: Cu, results: Cr} = Components;
-#expand const MOZ_APP_NAME = "__MOZ_APP_NAME__";
-#expand const MOZ_BUILD_APP = "__MOZ_BUILD_APP__";
 
 Cu.import("resource://gre/modules/Services.jsm");
 
@@ -25,8 +23,11 @@ this.ResetProfile = {
 
     // Reset is only supported for the default profile if the self-migrator used for reset exists.
     try {
-      return currentProfileDir.equals(profileService.selectedProfile.rootDir) &&
-        ("@mozilla.org/profile/migrator;1?app=" + MOZ_BUILD_APP + "&type=" + MOZ_APP_NAME in Cc);
+      if (currentProfileDir.equals(profileService.selectedProfile.rootDir) &&
+          "@mozilla.org/toolkit/profile-migrator;1" in Cc) {
+        let pm = Cc["@mozilla.org/toolkit/profile-migrator;1"].createInstance(Ci.nsIProfileMigrator);
+        return ("canMigrate" in pm) && pm.canMigrate("self");
+      }
     } catch (e) {
       // Catch exception when there is no selected profile.
       Cu.reportError(e);
@@ -50,7 +51,7 @@ this.ResetProfile = {
     let dataTypes = [];
     for (let itemID of MIGRATED_TYPES) {
       try {
-        let typeName = MigrationUtils.getLocalizedString(itemID + "_" + MOZ_APP_NAME);
+        let typeName = MigrationUtils.getLocalizedString(itemID + "_self");
         dataTypes.push(typeName);
       } catch (x) {
         // Catch exceptions when the string for a data type doesn't exist.
